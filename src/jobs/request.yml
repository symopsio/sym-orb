description: >
  Makes a Sym Request.

docker:
  - image: bitnami/python:3.10

parameters:
  flow_srn:
    type: string
    description: The SRN of the Flow to trigger
  flow_inputs:
    type: string
    description: |
      A valid JSON string containing the object to include as the `flow_inputs` parameter in the request body.
      (e.g. '{"target_srn": "healthy-health:access_target:custom:ci-deploy-target:latest"}')
  flow_context:
    type: string
    description: |
      A valid JSON string containing the object to include as the `context` parameter in the request body.
      (e.g. '{"foo": "bar"}').

      The context can also be supplied by providing data in the workspace, either as
      sym/context.json or as a collection of files in the sym/context folder.
    default: "{}"
  request_slug:
    type: string
    description: |
      A unique identifier for this request, so the output of this request can be used in subsequent Sym Request Orb jobs (e.g. sym/deescalate).
      If not specified, the output will not be saved.
    default: ""
  sym_api_url:
    type: string
    description: The URL to the Sym API.
    default: "https://api.symops.com/api/v1"
steps:
  - run:
      name: Create sym directory
      command: mkdir -p sym
  - request:
      flow_srn: <<parameters.flow_srn>>
      flow_inputs: <<parameters.flow_inputs>>
      flow_context: <<parameters.flow_context>>
      request_slug: <<parameters.request_slug>>
      sym_api_url: <<parameters.sym_api_url>>
  - persist_to_workspace:
      root: .
      paths:
        - sym/requests.json
